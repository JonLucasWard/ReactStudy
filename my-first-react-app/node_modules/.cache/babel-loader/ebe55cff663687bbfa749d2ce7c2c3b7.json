{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\CodeFiles\\\\week4\\\\MY-React-Tests\\\\my-first-react-app\\\\src\\\\components\\\\prog-jokes.tsx\";\nimport React from 'react';\nimport Axios from 'axios'; // using axios!\n\nimport '../App.css';\nexport class ProgJokes extends React.Component {\n  // set up state similar to interface and accept it\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: '',\n      joke: '',\n      setup: '',\n      delivery: '',\n      id: 0\n    };\n  }\n\n  handlePunchline() {\n    const url = 'https://sv443.net/jokeapi/category/Programming';\n    Axios.get(url).then(payload => {\n      // get function to joke api, if only 1 payload comes in then set it to the state\n      if (payload.data.type === 'single') {\n        this.setState({\n          setup: '',\n          delivery: '',\n          type: payload.data.type,\n          joke: payload.data.joke,\n          id: payload.data.id\n        });\n      } else {\n        // else set a delivery?\n        this.setState({\n          joke: '',\n          type: payload.data.type,\n          setup: payload.data.setup,\n          delivery: payload.data.delivery,\n          id: payload.data.id\n        });\n      }\n    });\n  }\n\n  render() {\n    // make some displays, on a click make the request to the API then display the resulting info\n    return React.createElement(\"div\", {\n      className: \"display-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"goodOleStuff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Wanna hear a Joke?\"), React.createElement(\"button\", {\n      className: \"goodOleStuff\",\n      onClick: () => this.handlePunchline(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Yea!\"), React.createElement(\"h6\", {\n      className: \"goodOleStuff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.setup), React.createElement(\"h5\", {\n      className: \"goodOleStuff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.joke), React.createElement(\"h6\", {\n      className: \"goodOleStuff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.delivery));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\Documents\\CodeFiles\\week4\\MY-React-Tests\\my-first-react-app\\src\\components\\prog-jokes.tsx"],"names":["React","Axios","ProgJokes","Component","constructor","props","state","type","joke","setup","delivery","id","handlePunchline","url","get","then","payload","data","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA0B;;AAC1B,OAAO,YAAP;AAYA,OAAO,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAmD;AAAE;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AACA,SAAKC,KAAL,GACI;AACIC,MAAAA,IAAI,EAAE,EADV;AAEIC,MAAAA,IAAI,EAAE,EAFV;AAGIC,MAAAA,KAAK,EAAE,EAHX;AAIIC,MAAAA,QAAQ,EAAE,EAJd;AAKIC,MAAAA,EAAE,EAAE;AALR,KADJ;AAQH;;AAEDC,EAAAA,eAAe,GAAG;AACd,UAAMC,GAAG,GAAG,gDAAZ;AAEAZ,IAAAA,KAAK,CAACa,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,OAAO,IAAI;AAAE;AAC7B,UAAIA,OAAO,CAACC,IAAR,CAAaV,IAAb,KAAsB,QAA1B,EAAoC;AAChC,aAAKW,QAAL,CAAc;AACVT,UAAAA,KAAK,EAAE,EADG;AAEVC,UAAAA,QAAQ,EAAE,EAFA;AAGVH,UAAAA,IAAI,EAAES,OAAO,CAACC,IAAR,CAAaV,IAHT;AAIVC,UAAAA,IAAI,EAAEQ,OAAO,CAACC,IAAR,CAAaT,IAJT;AAKVG,UAAAA,EAAE,EAAEK,OAAO,CAACC,IAAR,CAAaN;AALP,SAAd;AAOH,OARD,MASK;AAAE;AACH,aAAKO,QAAL,CAAc;AACVV,UAAAA,IAAI,EAAE,EADI;AAEVD,UAAAA,IAAI,EAAES,OAAO,CAACC,IAAR,CAAaV,IAFT;AAGVE,UAAAA,KAAK,EAAEO,OAAO,CAACC,IAAR,CAAaR,KAHV;AAIVC,UAAAA,QAAQ,EAAEM,OAAO,CAACC,IAAR,CAAaP,QAJb;AAKVC,UAAAA,EAAE,EAAEK,OAAO,CAACC,IAAR,CAAaN;AALP,SAAd;AAOH;AAEJ,KApBD;AAqBH;;AAEDQ,EAAAA,MAAM,GAAG;AAAE;AACP,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAGI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE,MAAM,KAAKP,eAAL,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAMI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKN,KAAL,CAAWG,KAAzC,CANJ,EAOI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKH,KAAL,CAAWE,IAAzC,CAPJ,EAQI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKF,KAAL,CAAWI,QAAzC,CARJ,CADJ;AAeH;;AAvDqD","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios' // using axios!\r\nimport '../App.css'\r\n\r\ninterface Jokes { // make joke template\r\n\r\n    type: string,\r\n    joke: string,\r\n    setup: string,\r\n    delivery: string,\r\n    id: number\r\n\r\n}\r\n\r\nexport class ProgJokes extends React.Component<any, Jokes>{ // set up state similar to interface and accept it\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state =\r\n            {\r\n                type: '',\r\n                joke: '',\r\n                setup: '',\r\n                delivery: '',\r\n                id: 0,\r\n            }\r\n    }\r\n\r\n    handlePunchline() {\r\n        const url = 'https://sv443.net/jokeapi/category/Programming';\r\n\r\n        Axios.get(url).then(payload => { // get function to joke api, if only 1 payload comes in then set it to the state\r\n            if (payload.data.type === 'single') {\r\n                this.setState({\r\n                    setup: '',\r\n                    delivery: '',\r\n                    type: payload.data.type,\r\n                    joke: payload.data.joke,\r\n                    id: payload.data.id\r\n                });\r\n            }\r\n            else { // else set a delivery?\r\n                this.setState({\r\n                    joke: '',\r\n                    type: payload.data.type,\r\n                    setup: payload.data.setup,\r\n                    delivery: payload.data.delivery,\r\n                    id: payload.data.id\r\n                });\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    render() { // make some displays, on a click make the request to the API then display the resulting info\r\n        return (\r\n            <div className=\"display-container\">\r\n                <h2 className=\"goodOleStuff\">Wanna hear a Joke?</h2>\r\n\r\n                <button className=\"goodOleStuff\" onClick={() => this.handlePunchline()}>Yea!</button>\r\n\r\n\r\n                <h6 className=\"goodOleStuff\">{this.state.setup}</h6>\r\n                <h5 className=\"goodOleStuff\">{this.state.joke}</h5>\r\n                <h6 className=\"goodOleStuff\">{this.state.delivery}</h6>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    };\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}