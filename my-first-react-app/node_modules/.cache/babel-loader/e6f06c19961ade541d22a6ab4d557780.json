{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\CodeFiles\\\\week4\\\\MY-React-Tests\\\\my-first-react-app\\\\src\\\\components\\\\roller\\\\roller-button-component.tsx\";\nimport * as React from 'react';\nexport class RollerButton extends React.Component {\n  render() {\n    // display this thang\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      // Binds a function to the click event using React\n      onClick: () => this.props.randomize(Math.round(Math.random() * 20 + 1))\n      /* call randomize function with appropriate logic */\n      ,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, \"Roll\"), // This will conditionally display the second button only\n    // when the expression 'this.props.clicks > 15' is true\n    this.props.result === 20 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Critical!\"), // This will conditionally display the second button only\n    // when the expression 'this.props.clicks > 15' is true\n    this.props.result === 1 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Crit-Fail!\"));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\Documents\\CodeFiles\\week4\\MY-React-Tests\\my-first-react-app\\src\\components\\roller\\roller-button-component.tsx"],"names":["React","RollerButton","Component","render","props","randomize","Math","round","random","result"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAAqD;AACxDC,EAAAA,MAAM,GAAG;AAAE;AACP,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI;AACA,MAAA,OAAO,EAAE,MACL,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAAhB,GAAqB,CAAhC,CAArB;AAAyD;AAHjE;AAII,MAAA,SAAS,EAAC,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAQQ;AACA;AACA,SAAKJ,KAAL,CAAWK,MAAX,KAAsB,EAAtB,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXR,EAcQ;AACA;AACA,SAAKL,KAAL,CAAWK,MAAX,KAAsB,CAAtB,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBR,CADJ;AAyBH;;AA3BuD","sourcesContent":["import * as React from 'react';\r\n\r\nexport class RollerButton extends React.Component<any, any> {\r\n    render() { // display this thang\r\n        return (\r\n            <div>\r\n                <button\r\n                    // Binds a function to the click event using React\r\n                    onClick={() =>\r\n                        this.props.randomize(Math.round(Math.random() * 20 + 1)) /* call randomize function with appropriate logic */}\r\n                    className=\"btn btn-primary\"\r\n                >Roll</button>\r\n                {\r\n                    // This will conditionally display the second button only\r\n                    // when the expression 'this.props.clicks > 15' is true\r\n                    this.props.result === 20 &&\r\n                    <p>Critical!</p>\r\n                }\r\n                {\r\n                    // This will conditionally display the second button only\r\n                    // when the expression 'this.props.clicks > 15' is true\r\n                    this.props.result === 1 &&\r\n                    <p>Crit-Fail!</p>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}