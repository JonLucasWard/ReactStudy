{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\CodeFiles\\\\week4\\\\MY-React-Tests\\\\my-first-react-app\\\\src\\\\components\\\\kh\\\\kh-display-component.tsx\";\nimport * as React from 'react';\nexport class KHDisplay extends React.Component {\n  constructor(props) {\n    // make component\n    super(props);\n  }\n\n  render() {\n    //display component\n    return (// This will change the style based on the value of\n      // this.props.clicks based on the ternary operation below\n      React.createElement(\"div\", {\n        style: {\n          // various styles depend on clicks\n          backgroundColor: this.props.clicks % 3 ? \"red\" : \"yellow\",\n          fontFamily: this.props.clicks % 5 ? \"cursive\" : \"arial\",\n          fontSize: this.props.clicks % 3 ? 50 : 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          visibility: this.props.clicks % 3 ? \"visible\" : \"hidden\",\n          backgroundColor: this.props.clicks % 2 ? \"green\" : \"blue\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \" Hello!!!!!!!!!\"), React.createElement(\"div\", {\n        style: {\n          visibility: this.props.clicks % 5 ? \"visible\" : \"hidden\",\n          backgroundColor: this.props.clicks % 3 ? \"pink\" : \"orange\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \" =)  =)    =)\"), this.props.clicks)\n    );\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\Documents\\CodeFiles\\week4\\MY-React-Tests\\my-first-react-app\\src\\components\\kh\\kh-display-component.tsx"],"names":["React","KHDisplay","Component","constructor","props","render","backgroundColor","clicks","fontFamily","fontSize","visibility"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAkD;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AAAE;AACtB,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAE;AACP,WACI;AACA;AACA;AAAK,QAAA,KAAK,EAAE;AAAE;AACVC,UAAAA,eAAe,EAAG,KAAKF,KAAL,CAAWG,MAAX,GAAoB,CAApB,GAAwB,KAAxB,GAAgC,QAD1C;AAERC,UAAAA,UAAU,EAAG,KAAKJ,KAAL,CAAWG,MAAX,GAAoB,CAApB,GAAwB,SAAxB,GAAoC,OAFzC;AAGRE,UAAAA,QAAQ,EAAG,KAAKL,KAAL,CAAWG,MAAX,GAAoB,CAApB,GAAwB,EAAxB,GAA6B;AAHhC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI;AAAK,QAAA,KAAK,EAAE;AACRG,UAAAA,UAAU,EAAG,KAAKN,KAAL,CAAWG,MAAX,GAAoB,CAApB,GAAwB,SAAxB,GAAoC,QADzC;AAERD,UAAAA,eAAe,EAAG,KAAKF,KAAL,CAAWG,MAAX,GAAoB,CAApB,GAAwB,OAAxB,GAAkC;AAF5C,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALJ,EASI;AAAK,QAAA,KAAK,EAAE;AACRG,UAAAA,UAAU,EAAG,KAAKN,KAAL,CAAWG,MAAX,GAAoB,CAApB,GAAwB,SAAxB,GAAoC,QADzC;AAERD,UAAAA,eAAe,EAAG,KAAKF,KAAL,CAAWG,MAAX,GAAoB,CAApB,GAAwB,MAAxB,GAAiC;AAF3C,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATJ,EAaK,KAAKH,KAAL,CAAWG,MAbhB;AAHJ;AAoBH;;AA1BoD","sourcesContent":["import * as React from 'react';\r\n\r\nexport class KHDisplay extends React.Component<any, any> {\r\n    constructor(props: any) { // make component\r\n        super(props);\r\n    }\r\n\r\n    render() { //display component\r\n        return (\r\n            // This will change the style based on the value of\r\n            // this.props.clicks based on the ternary operation below\r\n            <div style={{ // various styles depend on clicks\r\n                backgroundColor: (this.props.clicks % 3 ? \"red\" : \"yellow\"),\r\n                fontFamily: (this.props.clicks % 5 ? \"cursive\" : \"arial\"),\r\n                fontSize: (this.props.clicks % 3 ? 50 : 100)\r\n            }}>\r\n                <div style={{\r\n                    visibility: (this.props.clicks % 3 ? \"visible\" : \"hidden\"),\r\n                    backgroundColor: (this.props.clicks % 2 ? \"green\" : \"blue\")\r\n                }}> Hello!!!!!!!!!</div>\r\n                <div style={{\r\n                    visibility: (this.props.clicks % 5 ? \"visible\" : \"hidden\"),\r\n                    backgroundColor: (this.props.clicks % 3 ? \"pink\" : \"orange\")\r\n                }}> =)  =)    =)</div>\r\n                {this.props.clicks}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}