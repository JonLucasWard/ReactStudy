{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\CodeFiles\\\\week4\\\\MY-React-Tests\\\\my-first-react-app\\\\src\\\\components\\\\fun-page-component.tsx\";\nimport * as React from 'react';\nexport class FunComponent extends React.Component {\n  constructor(props) {\n    // make an object array of images\n    super(props);\n\n    this.retrieveFunImage = async () => {\n      const funImage = await fetch('https://source.unsplash.com/random'); // fetch to take a random image\n\n      const newFunImages = this.state.funImages; // add image to a new state\n\n      newFunImages.push(funImage.url); // push that image to the state array\n\n      this.setState({\n        funImages: newFunImages\n      }); // set it as a new state\n    };\n\n    this.handleClick = event => {\n      // click trigger\n      alert(\"This game is really fun, are you sure you want to continue?\"); //send alert\n\n      setInterval(this.retrieveFunImage, 500); // get an image every half second\n    };\n\n    this.state = {\n      funImages: []\n    };\n  }\n\n  render() {\n    // render the stuff\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Click ME!!\"), this.state.funImages.map(img => React.createElement(\"img\", {\n      src: img,\n      width: \"250px\",\n      height: \"250px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))\n    /*have the state as a map set to the source of each image*/\n    );\n  }\n\n}\nexport default FunComponent;","map":{"version":3,"sources":["C:\\Users\\Dell\\Documents\\CodeFiles\\week4\\MY-React-Tests\\my-first-react-app\\src\\components\\fun-page-component.tsx"],"names":["React","FunComponent","Component","constructor","props","retrieveFunImage","funImage","fetch","newFunImages","state","funImages","push","url","setState","handleClick","event","alert","setInterval","render","map","img"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAO,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAAqD;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AAAE;AACtB,UAAMA,KAAN;;AADoB,SAMxBC,gBANwB,GAML,YAAY;AAC3B,YAAMC,QAAa,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAAjC,CAD2B,CAC8C;;AACzE,YAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,SAAhC,CAF2B,CAEgB;;AAC3CF,MAAAA,YAAY,CAACG,IAAb,CAAkBL,QAAQ,CAACM,GAA3B,EAH2B,CAGM;;AACjC,WAAKC,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAEF;AAAb,OAAd,EAJ2B,CAIiB;AAC/C,KAXuB;;AAAA,SAYxBM,WAZwB,GAYRC,KAAD,IAAgD;AAAE;AAC7DC,MAAAA,KAAK,CAAC,6DAAD,CAAL,CAD2D,CACW;;AACtEC,MAAAA,WAAW,CAAC,KAAKZ,gBAAN,EAAwB,GAAxB,CAAX,CAF2D,CAElB;AAC5C,KAfuB;;AAEpB,SAAKI,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAWDQ,EAAAA,MAAM,GAAG;AAAE;AACP,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKJ,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEK,KAAKL,KAAL,CAAWC,SAAX,CAAqBS,GAArB,CAA0BC,GAAD,IAAc;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAe,MAAA,KAAK,EAAC,OAArB;AAA6B,MAAA,MAAM,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC;AAAsF;AAF3F,KADJ;AAOH;;AAzBuD;AA4B5D,eAAenB,YAAf","sourcesContent":["import * as React from 'react';\r\nimport { thisExpression } from '@babel/types';\r\n\r\nexport class FunComponent extends React.Component<any, any> {\r\n    constructor(props: any) { // make an object array of images\r\n        super(props);\r\n        this.state = {\r\n            funImages: [],\r\n        }\r\n    }\r\n    retrieveFunImage = async () => {\r\n        const funImage: any = await fetch('https://source.unsplash.com/random'); // fetch to take a random image\r\n        const newFunImages = this.state.funImages; // add image to a new state\r\n        newFunImages.push(funImage.url); // push that image to the state array\r\n        this.setState({ funImages: newFunImages }); // set it as a new state\r\n    }\r\n    handleClick = ((event: React.MouseEvent<HTMLButtonElement>) => { // click trigger\r\n        alert(\"This game is really fun, are you sure you want to continue?\"); //send alert\r\n        setInterval(this.retrieveFunImage, 500); // get an image every half second\r\n    });\r\n    render() { // render the stuff\r\n        return (\r\n            <div>\r\n                <button className='btn btn-primary' onClick={this.handleClick}>Click ME!!</button>\r\n                {this.state.funImages.map((img: any) => <img src={img} width='250px' height='250px' />)/*have the state as a map set to the source of each image*/}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FunComponent;"]},"metadata":{},"sourceType":"module"}