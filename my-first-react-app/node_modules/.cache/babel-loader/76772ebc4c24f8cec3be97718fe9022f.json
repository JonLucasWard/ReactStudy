{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\CodeFiles\\\\week4\\\\MY-React-Tests\\\\my-first-react-app\\\\src\\\\components\\\\luke-component.tsx\";\nimport * as React from 'react';\nexport class LukeComponent extends React.Component {\n  constructor(props) {\n    //make component, set number of possible iterations\n    super(props);\n    this.state = {\n      iterations: 0\n    };\n  }\n\n  increment() {\n    //add one to state\n    this.setState({\n      iterations: this.state.iterations + 1\n    });\n  }\n\n  divCounter(number) {\n    if (number == 1) {\n      // if number is one, set fontsize to number of iterations\n      return React.createElement(\"div\", {\n        style: {\n          fontSize: number + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"1\");\n    } else if (number > 1) {\n      // if number is greater than one, add font size -1\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          fontSize: number + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, number), this.divCounter(number - 1)\n      /* display font with size equal to # iterations*/\n      );\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"You will see what is happening after 5 clicks\"), React.createElement(\"button\", {\n      // Binds a function to the click event using React, when clicked, increment function\n      onClick: () => this.increment(),\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Click Me!!!\"), this.divCounter(this.state.iterations));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Dell\\Documents\\CodeFiles\\week4\\MY-React-Tests\\my-first-react-app\\src\\components\\luke-component.tsx"],"names":["React","LukeComponent","Component","constructor","props","state","iterations","increment","setState","divCounter","number","fontSize","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAAsD;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AAAE;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAEDC,EAAAA,SAAS,GAAG;AAAE;AACV,SAAKC,QAAL,CAAc;AACVF,MAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAX,GAAwB;AAD1B,KAAd;AAGH;;AAEDG,EAAAA,UAAU,CAACC,MAAD,EAAiB;AACvB,QAAIA,MAAM,IAAI,CAAd,EAAiB;AAAE;AACf,aACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAED,MAAM,GAAG;AAArB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAGH,KAJD,MAIO,IAAIA,MAAM,GAAG,CAAb,EAAgB;AAAE;AACrB,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAED,MAAM,GAAG;AAArB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CA,MAA1C,CAAL,EACH,KAAKD,UAAL,CAAgBC,MAAM,GAAG,CAAzB;AAA4B;AADzB,OAAR;AAIH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADJ,EAEI;AACI;AACA,MAAA,OAAO,EAAE,MAAM,KAAKL,SAAL,EAFnB;AAGI,MAAA,SAAS,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAOK,KAAKE,UAAL,CAAgB,KAAKJ,KAAL,CAAWC,UAA3B,CAPL,CADJ;AAWH;;AAvCwD","sourcesContent":["import * as React from 'react';\r\n\r\nexport class LukeComponent extends React.Component<any, any> {\r\n    constructor(props: any) { //make component, set number of possible iterations\r\n        super(props);\r\n        this.state = {\r\n            iterations: 0,\r\n        }\r\n    }\r\n\r\n    increment() { //add one to state\r\n        this.setState({\r\n            iterations: this.state.iterations + 1\r\n        });\r\n    }\r\n\r\n    divCounter(number: number) {\r\n        if (number == 1) { // if number is one, set fontsize to number of iterations\r\n            return (\r\n                <div style={{ fontSize: number + 'px' }}>1</div>\r\n            )\r\n        } else if (number > 1) { // if number is greater than one, add font size -1\r\n            return (<div><div style={{ fontSize: number + 'px' }}>{number}</div>\r\n                {this.divCounter(number - 1) /* display font with size equal to # iterations*/}\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"addon\">\r\n                <p>You will see what is happening after 5 clicks</p>\r\n                <button\r\n                    // Binds a function to the click event using React, when clicked, increment function\r\n                    onClick={() => this.increment()}\r\n                    className=\"btn btn-primary\"\r\n                >Click Me!!!</button>\r\n                {this.divCounter(this.state.iterations)}\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}