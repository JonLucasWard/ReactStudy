{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Dell\\\\Documents\\\\CodeFiles\\\\week4\\\\MY-React-Tests\\\\react-redux-example\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { clickerTypes } from \"../actions/clicker.actions\"; // Defining initial state of clicker\n\nconst initialState = {\n  clicks: 0\n}; // Define the reducer for the clicker\n// The reducer will determine which action has taken place\n// and if it needs to, it will return a new state if the action\n// requires it. If not, we will return the current state.\n// Usually, we will switch on an action, and capture the various actions\n// that we need to handle\n\nexport const clickerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case clickerTypes.CLICKER_UPDATE:\n      return _objectSpread({}, state, {\n        clicks: state.clicks + action.payload.amount\n      });\n\n    default:\n      break;\n  }\n\n  return state;\n};","map":{"version":3,"sources":["C:\\Users\\Dell\\Documents\\CodeFiles\\week4\\MY-React-Tests\\react-redux-example\\src\\reducers\\clicker.reducer.ts"],"names":["clickerTypes","initialState","clicks","clickerReducer","state","action","type","CLICKER_UPDATE","payload","amount"],"mappings":";AACA,SAASA,YAAT,QAA6B,4BAA7B,C,CAEA;;AACA,MAAMC,YAA2B,GAAG;AAChCC,EAAAA,MAAM,EAAE;AADwB,CAApC,C,CAIA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAuC;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,YAAY,CAACO,cAAlB;AACI,+BACOH,KADP;AAEIF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,GAAeG,MAAM,CAACG,OAAP,CAAeC;AAF1C;;AAIJ;AAAS;AANb;;AAQA,SAAOL,KAAP;AACH,CAVM","sourcesContent":["import { IClickerState } from \".\";\r\nimport { clickerTypes } from \"../actions/clicker.actions\";\r\n\r\n// Defining initial state of clicker\r\nconst initialState: IClickerState = {\r\n    clicks: 0\r\n};\r\n\r\n// Define the reducer for the clicker\r\n// The reducer will determine which action has taken place\r\n// and if it needs to, it will return a new state if the action\r\n// requires it. If not, we will return the current state.\r\n// Usually, we will switch on an action, and capture the various actions\r\n// that we need to handle\r\nexport const clickerReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case clickerTypes.CLICKER_UPDATE:\r\n            return {\r\n                ...state,\r\n                clicks: state.clicks + action.payload.amount\r\n            }\r\n        default: break;\r\n    }\r\n    return state;\r\n}"]},"metadata":{},"sourceType":"module"}