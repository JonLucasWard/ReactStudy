{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { clickerReducer } from \"./clicker.reducer\";\nimport { pokeReducer } from \"./poke.reducer\";\n;\nexport const state = combineReducers({\n  clicker: clickerReducer,\n  poke: pokeReducer\n});","map":{"version":3,"sources":["C:\\Users\\Dell\\Documents\\CodeFiles\\week4\\MY-React-Tests\\react-redux-example\\src\\reducers\\index.ts"],"names":["combineReducers","clickerReducer","pokeReducer","state","clicker","poke"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAIC;AAkBD,OAAO,MAAMC,KAAK,GAAGH,eAAe,CAAS;AACzCI,EAAAA,OAAO,EAAEH,cADgC;AAEzCI,EAAAA,IAAI,EAAEH;AAFmC,CAAT,CAA7B","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { clickerReducer } from \"./clicker.reducer\";\r\nimport { pokeReducer } from \"./poke.reducer\";\r\n\r\nexport interface IClickerState {\r\n    clicks: number\r\n};\r\n\r\nexport interface IPokeState {\r\n    name: string;\r\n    id: number;\r\n    spriteUrl: string;\r\n    types: string[];\r\n    inputValue: string; // Do we consider the current state of input as application state?\r\n    loadingNewPoke: boolean;\r\n}\r\n\r\n// Composed state of all substates\r\n// means that to access clicks -> state.clicker.clicks\r\nexport interface IState {\r\n    clicker: IClickerState,\r\n    poke: IPokeState\r\n}\r\n\r\nexport const state = combineReducers<IState>({\r\n    clicker: clickerReducer,\r\n    poke: pokeReducer\r\n})"]},"metadata":{},"sourceType":"module"}