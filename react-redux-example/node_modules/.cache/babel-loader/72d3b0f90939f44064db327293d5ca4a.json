{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\CodeFiles\\\\week4\\\\MY-React-Tests\\\\react-redux-example\\\\src\\\\components\\\\clicker.component.tsx\";\nimport React from 'react';\nimport { updateClicks } from \"../actions/clicker.actions\";\nimport { connect } from \"react-redux\";\nexport class ClickerComponent extends React.Component {\n  //make component passing in interface as props and an object as \n  // IClickerProps is the only data type allowed for our Properties\n  // Objects is the only type allowed for our States\n  // Send Store/Store State will allow any\n  render() {\n    // make the html with a clicks that tracks the props-click state, and a button that runs the update function\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Clicks: \", this.props.clicker.clicks), React.createElement(\"button\", {\n      onClick: () => this.props.updateClicks(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"+1\"));\n  }\n\n} // This function will convert state-store values to\n// component properties\n\nconst mapStateToProps = state => {\n  // \"unwinds\" store information\n  return {\n    clicker: state.clicker\n  };\n}; // This object definition will be used to map action creators to\n// properties\n\n\nconst mapDispatchToProps = {\n  updateClicks: updateClicks\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ClickerComponent);","map":{"version":3,"sources":["C:\\Users\\Dell\\Documents\\CodeFiles\\week4\\MY-React-Tests\\react-redux-example\\src\\components\\clicker.component.tsx"],"names":["React","updateClicks","connect","ClickerComponent","Component","render","props","clicker","clicks","mapStateToProps","state","mapDispatchToProps"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AASA,OAAO,MAAMC,gBAAN,SAA+BH,KAAK,CAACI,SAArC,CAAkE;AAAE;AACvE;AACA;AACA;AACAC,EAAAA,MAAM,GAAG;AAAC;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAhC,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWL,YAAX,CAAwB,CAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ;AAMH;;AAXoE,C,CAczE;AACA;;AACA,MAAMQ,eAAe,GAAIC,KAAD,IAAmB;AAAE;AACzC,SAAO;AACHH,IAAAA,OAAO,EAAEG,KAAK,CAACH;AADZ,GAAP;AAGH,CAJD,C,CAMA;AACA;;;AACA,MAAMI,kBAAkB,GAAG;AACvBV,EAAAA,YAAY,EAAEA;AADS,CAA3B;AAKA,eAAeC,OAAO,CAACO,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,gBAA7C,CAAf","sourcesContent":["import { IClickerState, IState } from \"../reducers\";\r\nimport React from 'react';\r\nimport { updateClicks } from \"../actions/clicker.actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport interface IClickerProps { // interface should have states and function info\r\n    // Data from state store\r\n    clicker: IClickerState,\r\n    // Action creators from the dispatcher\r\n    updateClicks: (amount: number) => void;\r\n}\r\n\r\nexport class ClickerComponent extends React.Component<IClickerProps, {}> { //make component passing in interface as props and an object as \r\n    // IClickerProps is the only data type allowed for our Properties\r\n    // Objects is the only type allowed for our States\r\n    // Send Store/Store State will allow any\r\n    render() {// make the html with a clicks that tracks the props-click state, and a button that runs the update function\r\n        return (\r\n            <div>\r\n                <h2>Clicks: {this.props.clicker.clicks}</h2>\r\n                <button onClick={() => this.props.updateClicks(1)}>+1</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// This function will convert state-store values to\r\n// component properties\r\nconst mapStateToProps = (state: IState) => { // \"unwinds\" store information\r\n    return {\r\n        clicker: state.clicker\r\n    }\r\n}\r\n\r\n// This object definition will be used to map action creators to\r\n// properties\r\nconst mapDispatchToProps = {\r\n    updateClicks: updateClicks\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClickerComponent);\r\n"]},"metadata":{},"sourceType":"module"}