{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\CodeFiles\\\\week4\\\\MY-React-Tests\\\\react-redux-example\\\\src\\\\components\\\\poke.component.tsx\";\nimport React from 'react';\nimport Axios from 'axios';\nimport { pokeSearchResolved, userSubmitRequest, inputUpdate } from '../actions/poke.actions';\nimport { connect } from 'react-redux'; // Recall that mostly redux components will deal with properties\n// provided by the state store\n\nexport class PokeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleInputChange(e) {\n    console.log('input changing');\n    const value = e.target.value;\n    this.props.inputUpdate(value);\n  }\n\n  submit() {\n    console.log('submit clicked');\n    const url = \"https://pokeapi.co/api/v2/pokemon/\".concat(this.props.poke.inputValue);\n    this.props.userSubmitRequest();\n    Axios.get(url).then(payload => {\n      const id = payload.data.id;\n      const name = payload.data.name;\n      const spriteUrl = payload.data.sprites.front_default;\n      const types = payload.data.types.map(typingAssignment => {\n        return typingAssignment.type.name;\n      });\n      this.props.pokeSearchResolved(name, id, spriteUrl, types);\n    });\n  }\n\n  submitPost() {\n    const url = \"https://api.myjson.com/bins\";\n    const data = {\n      a: 'Abby',\n      b: 'Billy',\n      c: 'Cindy'\n    };\n    const config = {\n      headers: {\n        \"Content-Type\": \"text/html\"\n      }\n    };\n    Axios.post(url, data, config).then(payload => {\n      console.log(payload);\n    });\n  }\n\n  render() {\n    const types = this.props.poke.types.map(type => {\n      return React.createElement(\"span\", {\n        key: type,\n        className: \"poke-type-span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, type);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Poke Finder\"), React.createElement(\"div\", {\n      id: \"poke-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"#\", this.props.poke.id, \": \", this.props.poke.name), React.createElement(\"img\", {\n      src: this.props.poke.spriteUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, types)), React.createElement(\"div\", {\n      id: \"poke-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"poke-text-input\",\n      onChange: e => this.handleInputChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.submit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      onClick: () => this.submitPost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  poke: state.poke\n});\n\nconst mapDispatchToProps = {\n  pokeSearchResolved: pokeSearchResolved,\n  userSubmitRequest: userSubmitRequest,\n  inputUpdate: inputUpdate\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PokeComponent);","map":{"version":3,"sources":["C:\\Users\\Dell\\Documents\\CodeFiles\\week4\\MY-React-Tests\\react-redux-example\\src\\components\\poke.component.tsx"],"names":["React","Axios","pokeSearchResolved","userSubmitRequest","inputUpdate","connect","PokeComponent","Component","constructor","props","handleInputChange","e","console","log","value","target","submit","url","poke","inputValue","get","then","payload","id","data","name","spriteUrl","sprites","front_default","types","map","typingAssignment","type","submitPost","a","b","c","config","headers","post","render","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\nimport { IState, IPokeState } from '../reducers';\r\nimport { pokeSearchResolved, userSubmitRequest, inputUpdate } from '../actions/poke.actions';\r\nimport { connect } from 'react-redux';\r\n\r\n// Recall that mostly redux components will deal with properties\r\n// provided by the state store\r\nexport interface IPokeProps {\r\n    poke: IPokeState;\r\n\r\n    // Action properties from the dispatcher\r\n    pokeSearchResolved: (name: string, id: number, spriteUrl: string, types: string[]) => void;\r\n    userSubmitRequest: () => void;\r\n    inputUpdate: (inputValue: string) => void;\r\n}\r\n\r\nexport class PokeComponent extends React.Component<IPokeProps> {\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    handleInputChange(e: any) {\r\n        console.log('input changing');\r\n        const value = e.target.value;\r\n        this.props.inputUpdate(value);\r\n    }\r\n\r\n    submit() {\r\n        console.log('submit clicked');\r\n        const url = `https://pokeapi.co/api/v2/pokemon/${this.props.poke.inputValue}`;\r\n        this.props.userSubmitRequest();\r\n        Axios.get(url).then(payload => {\r\n            const id = payload.data.id;\r\n            const name = payload.data.name;\r\n            const spriteUrl = payload.data.sprites.front_default;\r\n            const types = payload.data.types.map((typingAssignment: any) => {\r\n                return typingAssignment.type.name;\r\n            });\r\n            this.props.pokeSearchResolved(name, id, spriteUrl, types);\r\n        })\r\n    }\r\n\r\n    submitPost() {\r\n        const url = `https://api.myjson.com/bins`;\r\n        const data = {\r\n            a: 'Abby',\r\n            b: 'Billy',\r\n            c: 'Cindy'\r\n        };\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"text/html\",\r\n            }\r\n        }\r\n        Axios.post(url, data, config).then((payload) => {\r\n            console.log(payload);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const types = this.props.poke.types.map((type) => {\r\n            return (<span key={type} className=\"poke-type-span\">{type}</span>);\r\n        })\r\n        return (\r\n            <div>\r\n                <h1>Poke Finder</h1>\r\n                <div id=\"poke-display\">\r\n                    <h2>#{this.props.poke.id}: {this.props.poke.name}</h2>\r\n                    <img src={this.props.poke.spriteUrl}></img>\r\n                    <div>\r\n                        {types}\r\n                    </div>\r\n                </div>\r\n                <div id=\"poke-input\">\r\n                    <input type=\"text\" id=\"poke-text-input\" onChange={(e) => this.handleInputChange(e)} />\r\n                    <button onClick={() => this.submit()}>Submit</button>\r\n                    <button onClick={() => this.submitPost()}>Submit</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => ({\r\n    poke: state.poke\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    pokeSearchResolved: pokeSearchResolved,\r\n    userSubmitRequest: userSubmitRequest,\r\n    inputUpdate: inputUpdate\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokeComponent);\r\n\r\n"]},"metadata":{},"sourceType":"module"}